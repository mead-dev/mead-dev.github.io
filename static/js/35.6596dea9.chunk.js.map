{"version":3,"sources":["components/UI/Breadcrumb/Breadcrumb.js","components/UI/NewsCard/NewsCard.js","containers/News/News.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","breadcrumb","_ref","items","main","itemsComponent","map","item","i","a","createElement","key","className","to","content","listClassName","active","newsCard","src","title","subtitle","children","md","link","lg","date","Date","react_default","Col","Card","CardImg","top","width","alt","CardBody","CardTitle","CardSubtitle","getDate","getMonth","getFullYear","CardText","dangerouslySetInnerHTML","__html","News","state","data","_this2","this","props","auth","authPage","onAuthPageOff","userPage","onUserPageOff","RSSParser","parseURL","CORS_PROXY","then","res","setState","prevState","concat","catch","err","console","log","length","NewsCard","enclosure","url","pubDate","xs","Breadcrumb","PresentationalContainer","Fragment","Title","Row","Spinner","type","color","style","height","size","Component","connect","Object","objectSpread","dispatch","actions"],"mappings":"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","file":"static/js/35.6596dea9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Container } from 'reactstrap';\r\n\r\nconst breadcrumb = ({ items, main }) => {\r\n    let itemsComponent = null;\r\n\r\n    if (items) itemsComponent = items.map((item, i) => (\r\n        <BreadcrumbItem key={i}><NavLink className=\"text-info\" to={item.to}>{item.content}</NavLink></BreadcrumbItem>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"container-fluid bg-light\">\r\n            <Container className=\"p-0\">\r\n                <Breadcrumb listClassName=\"bg-transparent rounded-0\">\r\n                    <BreadcrumbItem><NavLink className=\"text-info\" to=\"/\">Accueil</NavLink></BreadcrumbItem>\r\n                    {itemsComponent}\r\n                    <BreadcrumbItem className=\"text-danger\" active>{main}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default breadcrumb;","import React from 'react';\r\nimport { Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle, Col } from 'reactstrap';\r\n\r\nconst newsCard = ({ src, title, subtitle, children, link, md, lg }) => {\r\n    const date = new Date(subtitle);\r\n    const monthsArray = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\r\n\r\n    return (\r\n        <Col md={md} lg={lg} className=\"pb-3\">\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={src} alt=\"News card cap\" />\r\n                <CardBody>\r\n                    <CardTitle className=\"h6 text-info\">{title}</CardTitle>\r\n                    <CardSubtitle className=\"text-danger mb-3\">Publié le {date.getDate()} {monthsArray[date.getMonth()]} {date.getFullYear()}</CardSubtitle>\r\n                    <CardText className=\"small\" dangerouslySetInnerHTML={{ __html: children }} />\r\n                </CardBody>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default newsCard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RSSParser from 'rss-parser';\r\nimport { Col, Row, Spinner } from 'reactstrap';\r\n\r\nimport Breadcrumb from '../../components/UI/Breadcrumb/Breadcrumb';\r\nimport NewsCard from '../../components/UI/NewsCard/NewsCard';\r\nimport Title from '../../components/UI/Titles/Title/Title';\r\nimport PresentationalContainer from '../../components/UI/PresentationalContainer/PresentationalContainer';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass News extends Component {\r\n    state = {\r\n        data: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.authPage) this.props.onAuthPageOff();\r\n        if (this.props.auth.userPage) this.props.onUserPageOff();\r\n        const parser = new RSSParser();\r\n        const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\"\r\n        const RSS_SOURCE = 'https://cdn-elle.ladmedia.fr/var/plain_site/storage/flux_rss/fluxMode.xml';\r\n\r\n        parser.parseURL(CORS_PROXY + RSS_SOURCE)\r\n            .then(res => {\r\n                this.setState(prevState => ({ data: prevState.data.concat(res) }));\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        let { data } = this.state;\r\n        let content = null;\r\n\r\n        if (data.length) {\r\n            content = data[0].items.map((item, i) => (\r\n                <NewsCard key={i} src={item.enclosure.url} md={6} lg={4} link={item.link} subtitle={item.pubDate} title={item.title}>{item.content}</NewsCard>\r\n            ));\r\n        }\r\n\r\n        return (\r\n            <Col xs={12} className=\"p-0\">\r\n                <Breadcrumb main=\"Actualités\" />\r\n                <PresentationalContainer>\r\n                    {!content ? (\r\n                        <div className=\"text-center\">\r\n                            <Spinner type=\"grow\" color=\"danger\" style={{ width: '5rem', height: '5rem' }} className=\"mx-auto\" size=\"xl\" />\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <Title className=\"text-center\">Dernières infos sur la mode dans le monde</Title>\r\n                            <Row className=\"justify-content-center\">\r\n                                {content}\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n                </PresentationalContainer>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAuthPageOff: () => dispatch(actions.authPageOff()),\r\n    onUserPageOff: () => dispatch(actions.userPageOff()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(News);"],"sourceRoot":""}