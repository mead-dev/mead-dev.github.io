{"version":3,"sources":["components/Error/Error.js","assets/images/whatsapp_wall.jpg","components/Chat/Navigation/SideDrawer/SideDrawer.js","components/Chat/Community/Community.js","containers/User/Chat/Chat.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","error","_ref","err","a","createElement","className","message","module","exports","p","sideDrawer","photo","name","communities","toggle","activeTab","onChange","search","navs","map","community","lastMessageIndex","messages","length","react_default","NavItem","style","cursor","key","owner","_id","NavLink","onClick","height","width","src","imageUrl","alt","moment","createdAt","format","content","top","zIndex","fontSize","type","value","placeholder","overflowY","Nav","Community","resizedHandler","event","chatbox","document","getElementById","_this","props","id","textareaContainerHeight","$","parent","outerHeight","bodyHeight","scrollTop","scrollHeight","onKeyDown","which","preventDefault","this","prevProps","prevState","_this2","_this$props","profile","onEmojiToggle","emojiPicker","emojiPickerShown","bottom","left","dist_default","onEmojiClick","code","obj","index","additionalClassName","color","date","user","userId","toString","displayDate","today","split","_displayDate$split","_displayDate$split2","Object","slicedToArray","month","day","year","maxWidth","followers","follower","sort","concat","objectFit","objectPosition","join","Wall","opacity","background","InputGroup","InputGroupAddon","addonType","Button","index_es","icon","react_autosize_textarea_lib_default","onResize","rows","Component","jsemoji","JSEMOJI","img_set","img_sets","emojione","path","supports_css","allow_native","replace_mode","Chat","state","tab","setState","inputChangedHandler","_event$target","target","defineProperty","submitHandler","_this$state","token","auth","fetch","method","headers","Content-Type","Authorization","body","JSON","stringify","communityId","then","res","status","Error","json","resData","catch","console","log","emoji","replace_colons","focus","logoutHandler","onAuthLogout","onAuthPageOn","onUserPageOff","onGetCommunities","nextProps","shop","toConsumableArray","openSocket","on","data","action","findIndex","newCommunities","push","b","aLastMessage","bLastMessage","Date","getTime","_this3","_this$state2","_this$props2","_this$props2$auth","authError","authLoading","_this$props2$shop","cart","shopError","shopLoading","role","notifications","errors","Spinner","size","Fragment","filteredCommunities","filter","toLowerCase","includes","tabs","TabPane","tabId","Chat_Community_Community","SideDrawer","paddingLeft","TabContent","Logo","big","Toolbar","logoWidth","cartItemsNumber","withRouter","connect","objectSpread","dispatch","actions","onSendMessage"],"mappings":"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","file":"static/js/33.6e6a7e80.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst error = ({ err }) => (err ? <div className=\"alert alert-danger\">{err.message ? err.message : err}</div> : null);\r\n\r\nexport default error;","module.exports = __webpack_public_path__ + \"static/media/whatsapp_wall.6a24a468.jpg\";","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport moment from 'moment';\r\n\r\nconst sideDrawer = ({ photo, name, communities, toggle, activeTab, onChange, search }) => {\r\n    const navs = communities.map(community => {\r\n        const lastMessageIndex = community.messages.length - 1;\r\n\r\n        return <NavItem style={{ cursor: 'pointer' }} className=\"border-bottom w-100 text-truncate\" key={community.owner._id}>\r\n            <NavLink className={\"py-2 px-3 mw-100 \" + (activeTab === community.owner._id ? \"bg-light\" : \"\")} onClick={() => toggle(community.owner._id)}>\r\n                <div className=\"d-flex mw-100 justify-content-start align-items-center\">\r\n                    <div className=\"mr-2 h-100 align-middle flex-shrink-0\">\r\n                        <img className=\"rounded-circle\" style={{ height: 50, width: 50 }} src={\"http://localhost:8080/\" + community.imageUrl} alt={community.name} />\r\n                    </div>\r\n                    <div className=\"flex-grow-1 text-truncate\">\r\n                        <span className=\"small float-right\">{community.messages[lastMessageIndex] ? moment(community.messages[lastMessageIndex].createdAt).format('LT') : null}</span>\r\n                        <h5 className=\"m-0\">{community.name}</h5>\r\n                        <span className=\"text-muted\">{community.messages[lastMessageIndex] ? community.messages[lastMessageIndex].content : 'Démarrer la discussion'}</span>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </NavItem>\r\n    });\r\n\r\n    return (\r\n        <aside style={{ width: '30%', height: 'calc(100vh - 56px)', top: 56, zIndex: 990, fontSize: '.9em' }} className=\"border-right position-fixed\">\r\n            {/* <div className=\"px-3 py-2\" style={{ backgroundColor: '#eee' }}>\r\n                <img src={\"http://localhost:8080/\" + photo} className=\"rounded-circle\" style={{ height: 40, width: 40, objectFit: 'cover', objectPosition: 'center' }} alt={name} />\r\n            </div> */}\r\n            <div className=\"bg-light border-bottom p-2\">\r\n                <input type=\"search\" name=\"search\" onChange={onChange} value={search} className=\"form-control\" placeholder=\"Rechercher une communauté\" />\r\n            </div>\r\n            <div className=\"bg-white px-0\" style={{ height: 'calc(100vh - 110px)', overflowY: 'auto' }}>\r\n                <Nav>{navs}</Nav>\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { InputGroup, InputGroupAddon, Button } from 'reactstrap';\r\nimport moment from 'moment';\r\nimport $ from 'jquery';\r\nimport TextareaAutoResize from 'react-autosize-textarea';\r\nimport EmojiPicker from 'emoji-picker-react';\r\n\r\nimport './Community.css';\r\n\r\nimport Wall from '../../../assets/images/whatsapp_wall.jpg';\r\n\r\n\r\nclass Community extends Component {\r\n    componentDidMount() {\r\n        const chatbox = document.getElementById('chatbox-' + this.props.id);\r\n        chatbox.scrollTop = chatbox.scrollHeight;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const chatbox = document.getElementById('chatbox-' + this.props.id);\r\n        chatbox.scrollTop = chatbox.scrollHeight;\r\n    }\r\n\r\n    resizedHandler = event => {\r\n        const chatbox = document.getElementById('chatbox-' + this.props.id);\r\n\r\n        const textareaContainerHeight = $('#textarea-' + this.props.id).parent().parent().outerHeight();\r\n        const bodyHeight = $('body').outerHeight();\r\n        chatbox.style.height = (bodyHeight - textareaContainerHeight - 110) + \"px\";\r\n        chatbox.scrollTop = chatbox.scrollHeight;\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (+event.which === 13) {\r\n            event.preventDefault();\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { community, onChange, onClick, value, profile, onEmojiToggle, emojiPickerShown } = this.props;\r\n        let emojiPicker = null;\r\n\r\n        if (emojiPickerShown) emojiPicker = <div className=\"position-absolute\" style={{ zIndex: 10, bottom: 'calc(100% - 2px)', left: 10 }}>\r\n            <EmojiPicker onEmojiClick={(code, obj) => this.props.onEmojiClick(code, obj)} />\r\n        </div>;\r\n\r\n        if (community) {\r\n            const messages = community.messages.map((message, index) => {\r\n                let additionalClassName = \"justify-content-start\";\r\n                let color = \"\";\r\n                let date = null;\r\n                let user = null;\r\n\r\n                if (message.userId._id.toString() === profile.userId.toString()) {\r\n                    color = \"bg-my-message text-dark\";\r\n                    additionalClassName = \"justify-content-end\";\r\n                } else {\r\n                    if ((community.messages[index - 1] && community.messages[index - 1].userId._id.toString() !== community.messages[index].userId._id.toString()) || !community.messages[index - 1]) {\r\n                        user = <strong>{message.userId.name}</strong>;\r\n                    }\r\n                    color = \"bg-white text-dark\";\r\n                }\r\n\r\n                if (!community.messages[index - 1] || moment(community.messages[index].createdAt).format('L') !== moment(community.messages[index - 1].createdAt).format('L')) {\r\n                    let displayDate = moment(message.createdAt).format('L');\r\n                    const today = moment().format('L').split('/');\r\n                    const [month, day, year] = displayDate.split('/');\r\n                    if (month === today[0] && year === today[2] && day === today[1]) displayDate = \"Today\";\r\n                    else if (month === today[0] && year === today[2] && +day === +today[1] - 1) displayDate = \"Yesterday\";\r\n\r\n                    date = <div className=\"d-flex my-2 justify-content-center\" key={message.createdAt}>\r\n                        <div className=\"rounded shadow-sm px-2 py-1 bg-info\">\r\n                            <div className=\"text-white small\">{displayDate}</div>\r\n                        </div>\r\n                    </div>;\r\n                }\r\n\r\n                return <div key={message._id} className=\"py-1\">\r\n                    {date}\r\n                    <div className={\"d-flex \" + additionalClassName}>\r\n                        <div className={\"rounded shadow-sm px-2 py-1 \" + color} style={{ maxWidth: '80%' }}>\r\n                            {user}\r\n                            <div>{message.content}</div>\r\n                            <div className=\"text-right text-muted small\">{moment(message.createdAt).format('LT')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>;\r\n            });\r\n\r\n            let followers = community.followers.map(follower => follower.name);\r\n            followers.sort();\r\n            followers = followers.concat('Vous');\r\n\r\n            return (\r\n                <div className=\"h-100 Community\" style={{ fontSize: '.9em' }}>\r\n                    <div className=\"px-3 d-flex justify-content-start align-items-center py-1 position-absolute bg-light w-100 shadow-sm\" style={{ top: 0, zIndex: 1 }}>\r\n                        <div className=\"flex-shrink mr-2\">\r\n                            <img src={\"http://localhost:8080/\" + community.imageUrl} className=\"rounded-circle\" style={{ height: 45, width: 45, objectFit: 'cover', objectPosition: 'center' }} alt={community.name} />\r\n                        </div>\r\n                        <div className=\"flex-fill\">\r\n                            <h5 className=\"m-0\">{community.name}</h5>\r\n                            <span className=\"text-muted text-truncate\">{followers.join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n                    <img src={Wall} className=\"h-100 w-100 position-absolute\" style={{ zIndex: 0, objectFit: 'cover', objectPosition: 'center', opacity: .03 }} alt=\"Wall\" />\r\n                    <div id={\"chatbox-\" + this.props.id} className=\"d-flex chatbox position-absolute w-100 py-2 px-5 justify-content-start flex-column\" style={{ background: 'transparent !important', zIndex: 1, height: 'calc(100vh - 163px)', overflowY: 'auto', top: 53 }}>\r\n                        {messages}\r\n                    </div>\r\n                    <div className=\"position-absolute border-top w-100 bg-light py-2 px-3\" style={{ bottom: 0, zIndex: 2 }}>\r\n                        {emojiPicker}\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\"><Button onClick={onEmojiToggle} color=\"info\"><FontAwesomeIcon icon=\"smile-wink\" /></Button></InputGroupAddon>\r\n                            <TextareaAutoResize id={\"textarea-\" + this.props.id} onResize={event => this.resizedHandler(event)} onKeyDown={event => this.onKeyDown(event)} name=\"content\" className=\"form-control\" value={value} placeholder=\"Taper un message\" onChange={onChange} rows={1} />\r\n                            <InputGroupAddon addonType=\"append\"><Button onClick={onClick} color=\"danger\"><FontAwesomeIcon icon=\"paper-plane\" /></Button></InputGroupAddon>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Community;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner, TabContent, TabPane } from 'reactstrap';\r\nimport openSocket from 'socket.io-client';\r\nimport JSEMOJI from 'emoji-js';\r\n\r\nimport * as actions from '../../../store/actions';\r\nimport AdminToolbar from '../../../components/Admin/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../../components/Chat/Navigation/SideDrawer/SideDrawer';\r\nimport Community from '../../../components/Chat/Community/Community';\r\nimport Error from '../../../components/Error/Error';\r\nimport Logo from '../../../components/UI/Logo/Logo';\r\n\r\n// new instance\r\nconst jsemoji = new JSEMOJI();\r\njsemoji.img_set = 'emojione';\r\njsemoji.img_sets.emojione.path = 'https://cdn.jsdelivr.net/emojione/assets/3.0/png/32/';\r\n\r\njsemoji.supports_css = false;\r\njsemoji.allow_native = true;\r\njsemoji.replace_mode = 'unified';\r\n\r\nclass Chat extends Component {\r\n    state = {\r\n        activeTab: null,\r\n        search: \"\",\r\n        content: \"\",\r\n        communities: null,\r\n        emojiPickerShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { onAuthPageOn, onUserPageOff, onGetCommunities } = this.props;\r\n        onAuthPageOn();\r\n        onUserPageOff();\r\n        onGetCommunities();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.shop.communities !== null) {\r\n            this.setState({\r\n                communities: [...nextProps.shop.communities]\r\n            }, () => {\r\n                const socket = openSocket('http://localhost:8080');\r\n                socket.on('message', data => {\r\n                    if (data.action === 'new') {\r\n                        const index = this.state.communities.findIndex(community => community.owner._id.toString() === data.message.communityId.toString());\r\n                        let newCommunities = [...this.state.communities];\r\n                        const newMessageIndex = newCommunities[index].messages.findIndex(message => message._id.toString() === data.message._id.toString());\r\n                        if (newMessageIndex < 0) newCommunities[index].messages.push(data.message);\r\n                        newCommunities.sort((a, b) => {\r\n                            const aLastMessage = a.messages[a.messages.length - 1];\r\n                            const bLastMessage = b.messages[b.messages.length - 1];\r\n\r\n                            return new Date(bLastMessage.createdAt).getTime() - new Date(aLastMessage.createdAt).getTime();\r\n                        });\r\n                        this.setState({\r\n                            communities: newCommunities\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    toggle = (tab) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    inputChangedHandler = event => {\r\n        const { value, name } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandler = () => {\r\n        const { content, activeTab } = this.state;\r\n        const { token } = this.props.auth;\r\n\r\n        this.setState({ content: '' });\r\n\r\n        fetch('http://localhost:8080/auth/message', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({ content, communityId: activeTab })\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Erreur lors de l\\'envoi du message.');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => { })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    onEmojiClick = (code, obj) => {\r\n        const emoji = jsemoji.replace_colons(`:${obj.name}:`);\r\n        this.setState(prevState => ({\r\n            content: prevState.content + emoji,\r\n            emojiPickerShown: false\r\n        }), () => document.getElementById('textarea-' + this.state.activeTab).focus());\r\n    }\r\n\r\n    onEmojiToggle = () => {\r\n        this.setState(prevState => ({\r\n            emojiPickerShown: !prevState.emojiPickerShown\r\n        }), () => document.getElementById('textarea-' + this.state.activeTab).focus());\r\n    }\r\n\r\n    logoutHandler = () => {\r\n        const { onAuthLogout } = this.props;\r\n        onAuthLogout();\r\n        // history.replace(auth.authRedirectPath);\r\n    }\r\n\r\n    render() {\r\n        const { activeTab, communities, search, emojiPickerShown } = this.state;\r\n        const { auth: { profile, authError, authLoading }, shop: { cart, shopError, shopLoading } } = this.props;\r\n        const { logoutHandler, toggle, inputChangedHandler, submitHandler } = this;\r\n        const { name, role, photo, notifications } = profile ? profile : { name: null, role: null, photo: null, notifications: null };\r\n\r\n        let content = null;\r\n        let errors = null;\r\n\r\n        if (shopLoading || authLoading) content = <div className=\"text-center\">\r\n            <Spinner type=\"grow\" color=\"danger\" style={{ width: '5rem', height: '5rem' }} className=\"mx-auto\" size=\"xl\" />\r\n        </div>;\r\n        else {\r\n            errors = <>\r\n                <Error err={authError} />\r\n                <Error err={shopError} />\r\n            </>;\r\n\r\n            if (communities) {\r\n                const filteredCommunities = communities.filter(community => community.name.toLowerCase().includes(search.toLowerCase()));\r\n                const tabs = communities.map(community => <TabPane key={'tab-' + community.owner._id} tabId={community.owner._id}>\r\n                    <Community id={community.owner._id} profile={profile} onEmojiToggle={this.onEmojiToggle} onEmojiClick={this.onEmojiClick} emojiPickerShown={emojiPickerShown} onClick={submitHandler} value={this.state.content} onChange={event => inputChangedHandler(event)} community={community} />\r\n                </TabPane>);\r\n                content = <>\r\n                    <SideDrawer onChange={event => inputChangedHandler(event)} activeTab={activeTab} search={search} communities={filteredCommunities} name={name} photo={photo} toggle={toggle} />\r\n                    <main className=\"bg-light position-relative\" style={{ paddingLeft: '30%', height: 'calc(100vh - 57px)' }}>\r\n                        <div className=\"container-fluid bg-light p-0 position-relative h-100\">\r\n                            {activeTab !== null ?\r\n                                <TabContent activeTab={activeTab}>\r\n                                    {tabs}\r\n                                </TabContent> :\r\n                                <div className=\"bg-light h-100 d-flex justify-content-center align-items-center\">\r\n                                    <div className=\"text-center w-75\">\r\n                                        <Logo big />\r\n                                        <h4 className=\"font-weight-light\">\r\n                                            Bienvenue dans l'espace discussion de MEAD\r\n                                        </h4>\r\n                                        <hr />\r\n                                        <p className=\"text-muted\">Pour commencer, veuillez rechercher la communauté de votre choix en utilisant la barre de recherche.</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </main>\r\n                </>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <AdminToolbar notifications={notifications} name={name} logoWidth={'30%'} role={role} cartItemsNumber={cart.length} logoutHandler={logoutHandler} />\r\n                {errors}\r\n                {content}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAuthPageOn: () => dispatch(actions.authPageOn()),\r\n    onUserPageOff: () => dispatch(actions.userPageOff()),\r\n    onAuthLogout: () => dispatch(actions.authLogout()),\r\n    onGetCommunities: () => dispatch(actions.getMyCommunities()),\r\n    onSendMessage: data => dispatch(actions.sendMessage(data)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Chat));"],"sourceRoot":""}